<template>
  <div class="index-page">
    <div class="header">
      <text class="header-time">{{ time }}</text>
      <input type="button" class="back-button" value="<" @click="exitApp()" />
    </div>

    <swiper indicator="false" class="countdown-swiper">
      <div for="{{events}}">
        <div class="countdown-page" style="background-color: {{$item.already ? '#f78803' : '#3184d0'}}">
          <div class="countdown-event-bg">
            <text class="countdown-event">{{ $item.name }}</text>
          </div>
          <div class="countdown-days-bg2"></div>
          <div class="countdown-days-bg">
            <text class="countdown-days">{{ $item.days }}</text>
          </div>
        </div>
      </div>
    </swiper>

    <input type="button" class="more-button" value="{{is_no_event ? '添加事件' : '更多'}}" @click="routeMore()" />
  </div>
</template>

<script>
import router from "@system.router";
import app from "@system.app";
import storage from "@system.storage";
import { showToast } from "@system.prompt";

const dateDiff = (date1) =>
	Math.floor(
		(new Date().getTime() - new Date(date1).getTime()) / (1000 * 60 * 60 * 24)
	);


export default {
	private: {
		time: "07:21",
		events: [{ name: "暂无事件...", days: "无", already: false }],
		is_no_event: false,
	},

	exitApp: () => app.terminate(),

	onReady() {
		// 清除缓存
		router.clear();

		// 写入页面顶部时间
		const date = new Date();
		const hour = date.getHours().toString().padStart(2, "0");
		const minute = date.getMinutes().toString().padStart(2, "0");
		this.time = hour + ":" + minute;

		// 首次使用提示
		storage.get({
			key: "tipRead",
			default: "0",
			success: (data) => {
				if (data == "0") {
					storage.set({
						key: "tipRead",
						value: "1",
						success: (_) =>
							showToast({
								message:
									"开发者技术不成熟，故如遇到应用卡死时请摘下手环，将自动重启。谢谢理解，祝使用愉快！",
								duration: 7000,
							}),
					});
				}
			},
		});

		// 获取数据
		storage.get({
			key: "events",
			default: "[]",
			success: (data) => {
				const events = JSON.parse(data);
				if (events.length == 0) {
					this.is_no_event = true;
					return;
				}
				this.events = events
					.filter((event) => event.on_index == true)
					.map((event) => {
						let days,
              name = event.name,
							already = true;
						const diff = dateDiff(event.date);
            
						if (diff > 0) {
							name += "已经";
							days = String(diff);
						} else if (diff == 0) {
							days = "今天";
						} else {
							name += "还有";
							days = String(-diff);
							already = false;
						}
						return {
							name,
							days,
							already,
						};
					});
				global.runGC();
			},
		});
	},

	routeMore() {
		if (this.is_no_event) {
			router.push({
				uri: "/pages/edit",
				params: {
					extend: "true",
					callback_uri: "/pages/index",
				},
			});
		} else {
			router.push({ uri: "/pages/list" });
		}
	},
};
</script>

<style>
@import "../../styles/header-new.css";

.index-page {
	flex-direction: column;
	justify-content: center;
	align-items: center;
	color: white;
	background-color: black;
}

.countdown-swiper {
	width: 166px;
	height: 166px;
	margin-top: 40px;
}

.countdown-page {
	display: flex;
	flex-direction: column;
	width: 166px;
	height: 166px;
	border-radius: 20px;
	align-items: center;
}

.countdown-event {
	font-size: 20px;
	text-align: center;
	text-wrap: nowrap;
	width: 150px;
	/*text-overflow: ellipsis;*/
	position: relative;
	top: -4px;
}

.countdown-event-bg {
	top: 4px;
	height: 44px;
	margin: none;
	padding: none;
}

.countdown-days-bg {
	display: flex;
	flex-direction: column;
	width: 100%;
	height: 126px;
	background-color: #dedede;
	color: black;
	justify-content: center;
	align-items: center;
	z-index: 100;
	border-radius: 20px;
}

.countdown-days-bg2 {
	position: absolute;
	background-color: #dedede;
	width: 100%;
	height: 20px;
	top: 42px;
}

.countdown-days {
	text-align: center;
	font-size: 56px;
	font-weight: bold;
}
.more-button {
	background-color: #3184d0;
	font-size: 22px;
	margin-top: 40px;
	height: 48px;
	width: 128px;
	color: white;
}
</style>