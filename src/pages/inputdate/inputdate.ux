<template>
  <div class="input-date-page">
    <div class="header">
      <text class="header-time">编辑日期</text>
    </div>
    <picker id="year-picker" type="text" range={{year_list}} selected={{`${year-1970}`}} @change="onYearChanged"></picker>
    <div class="mmdd">
      <picker id="month-picker" type="text" range={{month_list}} selected={{`${month-1}`}} @change="onMonthChanged">
      </picker>
      <picker id="day-picker" type="text" range={{day_list}} selected={{`${day-1}`}} @change="onDayChanged"></picker>
    </div>
    <input type="button" class="save-button" @click="saveDate" value="保存"></input>
  </div>
</template>

<script>
import router from "@system.router"
import { vibrate } from '@system.vibrator'

const day_list_template = ["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31"]
const month30 = [4, 6, 9, 11]

export default {
  private: {
    year_list: ["1970","1971","1972","1973","1974","1975","1976","1977","1978","1979","1980","1981","1982","1983","1984","1985","1986","1987","1988","1989","1990","1991","1992","1993","1994","1995","1996","1997","1998","1999","2000","2001","2002","2003","2004","2005","2006","2007","2008","2009","2010","2011","2012","2013","2014","2015","2016","2017","2018","2019","2020","2021","2022","2023","2024","2025","2026","2027","2028","2029","2030","2031","2032","2033","2034","2035","2036","2037","2038","2039","2040","2041","2042","2043","2044","2045","2046","2047","2048","2049","2050","2051","2052","2053","2054","2055","2056","2057","2058","2059","2060","2061","2062","2063","2064","2065","2066","2067","2068","2069","2070","2071","2072","2073","2074","2075","2076","2077","2078","2079","2080","2081","2082","2083","2084","2085","2086","2087","2088","2089","2090","2091","2092","2093","2094","2095","2096","2097","2098","2099","2100"],
    month_list: ["1","2","3","4","5","6","7","8","9","10","11","12"],
    day_list: day_list_template,
    year: "1970",
    month: "1",
    day: "1"
  },
  protected: {
    date: "2024-1-1",
    callback_uri: ""
  },
  onReady() {
    [this.year, this.month, this.day] = this.date.split("-")
    this.updateDayPicker(Number(this.month))
  },
  onYearChanged(e) {
    this.year = e.newValue
  },
  onMonthChanged(e) {
    this.updateDayPicker(Number(e.newValue))
    this.month = e.newValue
  },
  updateDayPicker(month) {
    let _day = this.day
    let days_count

    if (Number(this.month) == month) return; // 月份没有变化

    if (month == 2) {
      const year = Number(this.year)
      if ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0)) {
        days_count = 29
      } else {
        days_count = 28
      }
    } else if (month30.includes(month)) {
      days_count = 30
    } else {
      days_count = 31
    }
    this.day_list = day_list_template.slice(0, days_count)

    if (_day > days_count) _day = days_count

    this.day = _day
  },
  onDayChanged(e) {
    this.day = e.newValue
  },
  saveDate() {
		vibrate({ mode: "short" });
    router.replace({
      uri: this.callback_uri,
      params: {
        "date_callback": JSON.stringify({
          "input_cache_data": this.input_cache_data,
          "date": `${this.year}-${this.month}-${this.day}`
        })
      }
    })
  }
}
</script>

<style>
@import "../../styles/header-new.css";

.input-date-page {
  flex-direction: column;
  justify-content: center;
  align-items: center;
  color: white;
  background-color: black;
}

.line {
  display: flex;
  flex-direction: column;
  justify-content: left;
}

.mmdd {
  display: flex;
  flex-direction: row;
}

picker {
  width: 80px;
  height: 140px;
  font-size: 22px;
  selected-font-size: 30px;
}

.save-button {
  width: 100px;
  height: 44px;
  background-color: black;
  border: 3px;
  border-color: gray;
  color: white;
  font-size: 22px;
  margin-top: 30px;
}
</style>